name: Tests CI

on:
  push:
    branches: 
      - main
      - 193/refactor/aumentar-a-cobertura-dos-testes-unit√°rios
  pull_request:
    branches: 
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:15
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432

    env:
      PYTHONPATH: ${{ github.workspace }}/API  # Caminho para o diret√≥rio API
      DJANGO_SETTINGS_MODULE: AcheiUnB.settings  # Ajustado para o m√≥dulo correto
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: ${{ secrets.POSTGRES_DB }}
      DB_USER: ${{ secrets.POSTGRES_USER }}
      DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r API/requirements.txt
          pip install coverage


      # - name: Run Black (formata√ß√£o)
      #   run: black --check .

      # - name: Run Ruff (linting)
      #   run: ruff check .

      # - name: Post comment on PR if linting fails
      #   if: failure()
      #   uses: mshick/add-pr-comment@v2
      #   with:
      #     message: |
      #       ‚ùå **O c√≥digo n√£o passou na formata√ß√£o e linting!**
            
      #       Por favor, corrija os problemas antes de fazer push novamente:
            
      #       üñäÔ∏è **Formata√ß√£o:** Rode `black .`
      #       üîç **Linting:** Rode `ruff check --fix .`
            
      #       Depois de corrigir, fa√ßa `git add .`, `git commit -m "Corrigindo lint"` e `git push`.

      - name: Run tests with coverage
        run: |
          coverage run -m pytest
          coverage report -m

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}