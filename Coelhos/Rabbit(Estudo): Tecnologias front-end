# Tecnologias front-end </> üé®

**Frameworks**

Come√ßamos a pesquisa procurando por quais s√£o os frameworks front-end  mais adequados para integrar com o Djando, framework escolhido pelo time de back.

Estas foram as op√ß√µes:

### 1. React

https://react.dev/learn

- ‚Ä¢ **Vantagens**: Popular e tem grande suporte da comunidade, excelente para construir interfaces de usu√°rio din√¢micas e interativas. H√° muitos pacotes e bibliotecas que complementam React para diferentes necessidades.
- **Curva de aprendizado**: Moderada. √â necess√°rio aprender JSX (uma sintaxe similar a HTML no JavaScript) e entender o conceito de estado e componentes funcionais.
- Pr√©-requisitos: JavaScript ES6+, HTML, CSS, JSX, no√ß√µes de estado, Node.js, npm
- **Estrutura**: Biblioteca leve e flex√≠vel focada no componente visual; depende de bibliotecas adicionais para roteamento, gerenciamento de estado, e requisi√ß√µes HTTP (como React Router, Redux, e Axios).
- **Uso**: Flex√≠vel para diversos tipos de projeto, pois √© mais uma biblioteca que um framework completo.
- ‚Ä¢ **Integra√ß√£o com Django**: Django REST Framework √© frequentemente usado para expor uma API que o React consome, permitindo uma separa√ß√£o limpa entre o front-end e o back-end. Al√©m disso, bibliotecas como¬†**`django-webpack-loader`**¬†ajudam a servir arquivos React dentro dos templates de Django.

### 2. Vue.js

https://vuejs.org/guide/introduction

- ‚Ä¢ **Vantagens**: Simples de aprender e configurar, especialmente para projetos que requerem interatividade incremental, pois pode ser adicionado gradualmente a um projeto Django sem reescrever o front-end todo.
- **Curva de aprendizado**: Baixa a moderada. Usa uma sintaxe semelhante a HTML, CSS e JavaScript, o que facilita para iniciantes. √â considerado f√°cil de entender, especialmente para quem conhece HTML.
- Pr√©-requisitos: JavaScript ES6+, HTML, CSS, conceitos de componente, sintaxe de templates
- **Estrutura**: Framework progressivo. Oferece uma solu√ß√£o completa com seu pr√≥prio roteador e biblioteca de gerenciamento de estado (Vue Router e Vuex).
- **Uso**: Bom para projetos de pequeno a m√©dio porte. A arquitetura progressiva permite adicionar complexidade conforme necess√°rio.
- ‚Ä¢ **Integra√ß√£o com Django**: Similar ao React, Vue pode se comunicar com o back-end Django via uma API RESTful. Tamb√©m √© poss√≠vel configurar o Webpack com

### 3. Angular

https://v17.angular.io/docs

- ‚Ä¢ **Vantagens**: Popular e tem grande suporte da comunidade, excelente para construir interfaces de usu√°rio din√¢micas e interativas. H√° muitos pacotes e bibliotecas que complementam React para diferentes necessidades.
- ‚Ä¢ **Integra√ß√£o com Django**: Django REST Framework √© frequentemente usado para expor uma API que o React consome, permitindo uma separa√ß√£o limpa entre o front-end e o back-end. Al√©m disso, bibliotecas como¬†**`django-webpack-loader`**¬†ajudam a servir arquivos React dentro dos templates de Django.
- **Curva de aprendizado**: Alta. √â necess√°rio entender TypeScript, inje√ß√£o de depend√™ncia e o uso extensivo de decorators. A curva pode ser acentuada devido ao uso de arquiteturas baseadas em m√≥dulos e componentes.
- Pr√©-requisitos: TypeScript, JavaScript ES6+, HTML, CSS, Arquitetura de componentes e m√≥dulos
- **Estrutura**: Framework completo e robusto, com tudo embutido (roteamento, valida√ß√£o de formul√°rios, anima√ß√µes, servi√ßos HTTP, etc.), mas r√≠gido em termos de estrutura.
- **Uso**: Recomendado para projetos de m√©dio a grande porte, onde uma estrutura robusta e de longo prazo √© necess√°ria

‚Ä¶ Alpine.js, Slelte, HTMX ‚Ä¶ foram op√ß√µes mais simples

Resumindo: 

| Aspecto | React | Vue | Angular |
| --- | --- | --- | --- |
| **Link da Documenta√ß√£o** | [React Documentation](https://react.dev/learn) | [Vue.js Documentation](https://vuejs.org/guide/introduction) | [Angular Documentation](https://v17.angular.io/docs) |
| **Vantagens** | Popular, grande suporte da comunidade, ideal para interfaces din√¢micas e interativas. Muitos pacotes e bibliotecas dispon√≠veis. | Simples de aprender e configurar, ideal para interatividade incremental. Pode ser adicionado gradualmente a projetos existentes. | Popular, grande suporte da comunidade, excelente para interfaces din√¢micas. Oferece uma solu√ß√£o completa e robusta. |
| **Curva de Aprendizado** | Moderada; necess√°rio aprender JSX e conceitos de estado e componentes funcionais. | Baixa a moderada; usa sintaxe semelhante a HTML, CSS e JavaScript, f√°cil para iniciantes. | Alta; exige compreens√£o de TypeScript, inje√ß√£o de depend√™ncia e uso extensivo de decorators. |
| **Pr√©-requisitos** | JavaScript ES6+, HTML, CSS, JSX, no√ß√µes de estado, Node.js, npm | JavaScript ES6+, HTML, CSS, conceitos de componente, sintaxe de templates | TypeScript, JavaScript ES6+, HTML, CSS, arquitetura de componentes e m√≥dulos |
| **Estrutura** | Biblioteca leve e flex√≠vel focada em componentes visuais; depende de bibliotecas adicionais (React Router, Redux, Axios). | Framework progressivo; solu√ß√£o completa com roteador e biblioteca de gerenciamento de estado (Vue Router, Vuex). | Framework completo e robusto; inclui roteamento, valida√ß√£o de formul√°rios, anima√ß√µes, servi√ßos HTTP. |
| **Uso** | Flex√≠vel para diversos tipos de projeto; mais uma biblioteca do que um framework completo. | Bom para projetos de pequeno a m√©dio porte; complexidade pode ser adicionada conforme necess√°rio. | Recomendado para projetos de m√©dio a grande porte; estrutura robusta e de longo prazo. |
| **Integra√ß√£o com Django** | Utiliza Django REST Framework para expor APIs consumidas pelo React. `django-webpack-loader` pode servir arquivos React dentro de templates Django. | Semelhante ao React; se comunica com o back-end Django via API RESTful. Poss√≠vel configura√ß√£o do Webpack para integra√ß√£o. | Usa Django REST Framework para expor APIs, permitindo uma separa√ß√£o clara entre front-end e back-end. |

**Formatadores de c√≥digo**

Padroniza√ß√£o de c√≥digo √© muito importante para garantir a uniformidade e legibilidade do c√≥digo conjuto. Aqui v√£o algumas sugest√µes:

Para Java Script/Type Script :  https://prettier.io/docs/en/

Para python: https://github.com/psf/black

Ambos possum extens√µes no VSCode facilmente inst√°veis
